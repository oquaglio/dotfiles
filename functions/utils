# print environment
# takes a param that is a string to search for
e() {
    # Define colors
    GREEN="\033[0;32m"
    YELLOW="\033[1;33m"
    NC="\033[0m" # No Color

    # Print matched environment variables with highlighting for the search term
    printenv | grep -i --color=always "$1" | sort

    # Count matches and print the total with color
    matches=$(printenv | grep -i -c "$1")
    printf "${YELLOW}Matches: ${GREEN}${matches}${NC}\n"
}

#display ports
dp() {
    search_term="$1"

    if [[ -z "$search_term" ]]; then
        echo "No search term provided. Listing all processes."
        sudo netstat -tulanp 2>/dev/null | while read -r line; do
            if [[ "$line" =~ ^Proto ]]; then
                echo -e "${line}\tOWNER"  # Add OWNER header
            else
                pid=$(echo "$line" | awk '{print $NF}' | cut -d'/' -f1)
                if [[ "$pid" =~ ^[0-9]+$ ]]; then
                    owner=$(ps -o user= -p "$pid" 2>/dev/null || echo "N/A")
                    echo -e "${line}\t${owner}"
                else
                    echo -e "${line}\tN/A"
                fi
            fi
        done | tee /tmp/dp_matches.log
    else
        echo "Searching for processes matching: $search_term"
        sudo netstat -tulanp 2>/dev/null | grep -i "$search_term" | while read -r line; do
            if [[ "$line" =~ ^Proto ]]; then
                echo -e "${line}\tOWNER"  # Add OWNER header
            else
                pid=$(echo "$line" | awk '{print $NF}' | cut -d'/' -f1)
                if [[ "$pid" =~ ^[0-9]+$ ]]; then
                    owner=$(ps -o user= -p "$pid" 2>/dev/null || echo "N/A")
                    echo -e "${line}\t${owner}"
                else
                    echo -e "${line}\tN/A"
                fi
            fi
        done | tee /tmp/dp_matches.log
    fi

    match_count=$(wc -l < /tmp/dp_matches.log)
    echo "Matches: $match_count"
    rm -f /tmp/dp_matches.log
}
