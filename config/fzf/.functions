fzrg() {
  local search_term="$1"
  if [ -z "$search_term" ]; then
    echo "Usage: fzrg <search_term>"
    return 1
  fi

  # Use an array for flags
  local rg_flags=(--color=always --line-number --no-heading)
  [[ "$search_term" =~ [A-Z] ]] || rg_flags+=(--ignore-case)

  local selected
  selected=$(rg "${rg_flags[@]}" "$search_term" \
    | fzf --ansi \
          --delimiter : \
          --preview '
            file=$(echo {} | cut -d: -f1)
            line=$(echo {} | cut -d: -f2)
            if [[ "$line" =~ ^[0-9]+$ ]]; then
              start=$((line > 5 ? line - 5 : 1))
              end=$((line + 5))
              bat --style=numbers --color=always \
                  --line-range "$start":"$end" \
                  --highlight-line "$line" \
                  "$file"
            else
              echo "Invalid line number: $line"
            fi
          ' \
          --preview-window=right:50% \
          --bind 'enter:accept')

  if [ -n "$selected" ]; then
    local file line
    file=$(echo "$selected" | cut -d: -f1)
    line=$(echo "$selected" | cut -d: -f2)
    if [[ "$line" =~ ^[0-9]+$ ]]; then
      nvim +"$line" "$file"
    else
      echo "Could not extract a valid line number from: $selected"
    fi
  fi
}
